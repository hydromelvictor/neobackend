openapi: 3.0.3
info:
  title: NEO DOCUMENTATION
  version: 1.0.0
  description: >
    API BACKEND NEO

servers:
  - url: http://localhost:3000/
    description: Serveur de développement local


components:
  schemas:
    Authenticated:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string

    Admin:
      type: object
      required:
        - _id
        - firstname
        - lastname
        - phone
        - email
        - cni
        - authority
        - online
        - isAuthenticated
        - staff
        - authorization
        - createdAt
        - updatedAt
      properties:
        _id:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        picture:
          type: string
        phone:
          type: string
        email:
          type: string
        cni:
          type: string
        position:
          type: string
        authority:
          type: boolean
        online:
          type: boolean
        isAuthenticated:
          type: boolean
        staff:
          type: boolean
        authorization:
          type: array
          items:
            type: string
        disconnected:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Lead:
      type: object
      required:
        - _id
        - online
        - isAuthenticated
        - staff
        - authorization
        - createdAt
        - updatedAt
      properties:
        _id:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        picture:
          type: string
        phone:
          type: string
        address:
          type: string
        online:
          type: boolean
        isAuthenticated:
          type: boolean
        staff:
          type: boolean
        authorization:
          type: array
          items:
            type: string
        disconnected:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Member:
      type: object
      required:
        - org
        - firstname
        - lastname
        - email
        - phone
        - position
        - password
      properties:
        _id:
          type: string
        org:
          type: string
          format: ObjectId
        firstname:
          type: string
        lastname:
          type: string
        phone:
          type: string
        email:
          type: string
        picture:
          type: string
        position:
          type: string
        password:
          type: string
        authority:
          type: boolean
        online:
          type: boolean
        isAuthenticated:
          type: boolean
        staff:
          type: boolean
        authorization:
          type: array
          items:
            type: string
        disconnected:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

paths:

  /admin/load-data:
    post:
      summary: >
        collecte les donnee d'inscription d'un admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstname
                - lastname
                - phone
                - email
                - cni
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                cni:
                  type: string
                position:
                  type: string
      responses:
        '200':
          description: >
            Email envoyer a l'admin avec un code de validation a 6 chiffre
        '400':
          description: >
            echecs de la requete pour données invalide
            soit donnnes incomplete
            soit donnees de type differents attendu
            soit erreur a la genaration du token (rare)
  
  /admin/register:
    post:
      summary: >
        creation du admin avec avec restriction a aucune action
        le superadmin doit l'octroyer des authorization pour qu'il ai acces a la plateforme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
  
  /admin/login:
    post:
      summary: >
        connexion par email et reception de code d'authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Email envoyer avec success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticated'
  
  /admin/logout:
    get:
      summary: logout admin
      responses:
        '200':
          description: success
  
  /admin/pass:
    post:
      summary: >
        connexion par code d'authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                  refresh:
                    type: string
  /admin:
    get:
      summary: lister les admins selon ou/et avec des critere
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: letter
          in: query
          schema:
            type: string
        - name: before
          in: query
          schema:
            type: string
            format: date-time
        - name: after
          in: query
          schema:
            type: string
            format: date-time
        - name: position
          in: query
          schema:
            type: string
        - name: online
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
        - name: is_authenticated
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
        - name: staff
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
        - name: page
          in: query
          schema:
            type: number
        - name: limit
          in: query
          schema:
            type: number
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Admin'

  /admin/check-email:
    post:
      summary: verifier le nouveau email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              required:
                - email
              properties:
                email:
                  type: string
      responses:
        '200':
          description: success

  /admin/update-email:
    put:
      summary: mis a jour du mail admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              required:
                - code
              properties:
                code:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'

  /admin/recovery:
    post:
      summary: code de recuperation de code si l'email est perdu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              required:
                - recovery
              properties:
                recovery:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'

  /admin/{id}:
    get:
      summary: >
        recuperation des donnees d'un admin
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: ObjectId
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
  
    put:
      summary: mis a jour des donnes admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: ObjectId
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                picture:
                  type: string
                phone:
                  type: string
                cni:
                  type: string
                position:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'

    delete:
      summary: suppression des donnees administrateur
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: ObjectId
      responses:
        '204':
          description: success
  
  /stats/admin:
    get:
      summary: nombre d'element selon la requete
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: letter
          in: query
          schema:
            type: string
        - name: before
          in: query
          schema:
            type: string
            format: date-time
        - name: after
          in: query
          schema:
            type: string
            format: date-time
        - name: position
          in: query
          schema:
            type: string
        - name: online
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
        - name: is_authenticated
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
        - name: staff
          in: query
          schema:
            type: boolean
            enum:
              - true
              - false
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: number

  /lead:
    post:
      summary: creation  de lead
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
    
    get:
      summary: recuperation de plusieurs leads
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: letter
          in: query
          schema:
            type: string
        - name: address
          in: query
          schema:
            type: string
        - name: before
          in: query
          schema:
            type: string
            format: date-time
        - name: after
          in: query
          schema:
            type: string
            format: date-time
        - name: online
          in: query
          schema:
            type: boolean
        - name: is_authenticated
          in: query
          schema:
            type: boolean
        - name: staff
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lead'
  
  /lead/{id}:
    post:
      summary: connexion d'un lead
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: ObjectId
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticated'
    
    get:
      summary: recuperation d'un profil lead
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: ObjectId
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
    
    put:
      summary: mis a jour du lead
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: ObjectId
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                picture:
                  type: string
                phone:
                  type: string
                address:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'

    delete:
      summary: suppression d'un lead
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
            format: ObjectId
      responses:
        '200':
          description: success

  /lead/logout:
    get:
      summary: logout lead
      responses:
        '200':
          description: success
  
  /stats/lead:
    get:
      summary: total lead
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: letter
          in: query
          schema:
            type: string
        - name: address
          in: query
          schema:
            type: string
        - name: before
          in: query
          schema:
            type: string
            format: date-time
        - name: after
          in: query
          schema:
            type: string
            format: date-time
        - name: online
          in: query
          schema:
            type: boolean
        - name: is_authenticated
          in: query
          schema:
            type: boolean
        - name: staff
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: number
  
  

