openapi: 3.0.3
info:
  title: NEO DOCUMENTATION
  version: 1.0.0
  description: >
    API BACKEND NEO

servers:
  - url: http://localhost:3000/
    description: Serveur de développement local


components:
  parameters:
    Id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: ObjectId
    Name:
      name: name
      in: query
      schema:
        type: string
    Letter:
      name: letter
      in: query
      schema:
        type: string
    Before:
      name: before
      in: query
      schema:
        type: string
        format: date-time
    After:
      name: after
      in: query
      schema:
        type: string
        format: date-time
    Position:
      name: position
      in: query
      schema:
        type: string
    Online:
      name: online
      in: query
      schema:
        type: boolean
        enum:
          - true
          - false
    IsAuthenticated:
      name: is_authenticated
      in: query
      schema:
        type: boolean
        enum:
          - true
          - false
    Staff:
      name: staff
      in: query
      schema:
        type: boolean
        enum:
          - true
          - false
    Page:
      name: page
      in: query
      schema:
        type: number
    Limit:
      name: limit
      in: query
      schema:
        type: number
    Address:
      name: address
      in: query
      schema:
        type: string
    Org:
      name: org
      in: query
      schema:
        type: string
        format: ObjectId

  schemas:
    Authenticated:
      type: object
      properties:
        access:
          type: string
          description: token d'access uniquement a la route nones
        refresh:
          type: string
          description: token de rafraichissement du token d'access

    Admin:
      type: object
      required:
        - firstname
        - lastname
        - phone
        - email
        - cni
      properties:
        _id:
          type: string
          format: ObjectId
          description: identifiant unique
        firstname:
          type: string
          description: prenoms
        lastname:
          type: string
          description: nom
        picture:
          type: string
          description: lien vers l'image de profil
        phone:
          type: string
          description: numero telephonique personnel
        email:
          type: string
          description: adresse mail personnel
        cni:
          type: string
          description: numero de piece identité national
        position:
          type: string
          description: fonction
        authority:
          type: boolean
          description: defini le superadmin l'utilisateur ayant absolument tout les droit
        online:
          type: boolean
          description: permet d'identifier un utilisateur en ligne
        isAuthenticated:
          type: boolean
          description: permet d'identifierun utilisateur authentifier
        staff:
          type: boolean
          description: permet d'identifier les admins
        authorization:
          type: array
          items:
            type: string
          description: definis les authorisation des utilisateurs
        disconnected:
          type: string
          description: dernier date de deconnexion
        createdAt:
          type: string
          format: date-time
          description: date de creation de l'utilisateur
        updatedAt:
          type: string
          format: date-time
          description: derniere mis a jour de l'utilisateur

    Lead:
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
          description: identifiant unique
        firstname:
          type: string
          description: prenoms
        lastname:
          type: string
          description: nom
        picture:
          type: string
          description: lien vers l'image de profil
        phone:
          type: string
          description: numero telephonique personnel
        address:
          type: string
          description: lieu d'habitation
        online:
          type: boolean
          description: permet d'identifier un utilisateur en ligne
        isAuthenticated:
          type: boolean
          description: permet d'identifierun utilisateur authentifier
        staff:
          type: boolean
          description: permet d'identifier les admins
        authorization:
          type: array
          items:
            type: string
          description: definis les authorisation des utilisateurs
        disconnected:
          type: string
          description: dernier date de deconnexion
        createdAt:
          type: string
          format: date-time
          description: date de creation de l'utilisateur
        updatedAt:
          type: string
          format: date-time
          description: derniere mis a jour de l'utilisateur

    Member:
      type: object
      required:
        - org
        - firstname
        - lastname
        - email
        - phone
        - position
        - password
      properties:
        _id:
          type: string
          format: ObjectId
          description: identifiant unique
        org:
          type: string
          format: ObjectId
          description: identifiant de l'organisation proprietaire
        firstname:
          type: string
          description: prenoms
        lastname:
          type: string
          description: nom
        phone:
          type: string
          description: numero telephonique personnel
        email:
          type: string
          description: adresse mail personnel
        picture:
          type: string
          description: photo de profil
        position:
          type: string
          description: fonction
        password:
          type: string
          description: >
            mot de pass fort
            - 8 caracteres
            - une lettre majuscule minimum
            - une lettre minuscule minimum
            - un chiffre minimum
            - un caractere special minimum
        authority:
          type: boolean
          description: defini le membre ayant droit de modification des donnees de l'entreprise
        online:
          type: boolean
          description: permet d'identifier un utilisateur en ligne
        isAuthenticated:
          type: boolean
          description: permet d'identifierun utilisateur authentifier
        staff:
          type: boolean
          description: permet d'identifier les admins
        authorization:
          type: array
          items:
            type: string
          description: definis les authorisation des utilisateurs
        disconnected:
          type: string
          description: dernier date de deconnexion
        createdAt:
          type: string
          format: date-time
          description: date de creation de l'utilisateur
        updatedAt:
          type: string
          format: date-time
          description: derniere mis a jour de l'utilisateur

    Mentor:
      type: object
      required:
        - firstname
        - lastname
        - country
        - city
        - position
        - phone
        - email
      properties:
        _id:
          type: string
          format: ObjectId
          description: identifiant unique
        firstname:
          type: string
          description: prenoms
        lastname:
          type: string
          description: nom
        country:
          type: string
          description: pays d'habitation
        city:
          type: string
          description: ville d'habitation
        position:
          type: string
          description: fonction
        phone:
          type: string
          description: numero telephonique personnel
        email:
          type: string
          description: adresse mail personnel
        picture:
          type: string
          description: lien vers l'image de profil
        password:
          type: string
          description: >
            mot de pass fort
            - 8 caracteres
            - une lettre majuscule minimum
            - une lettre minuscule minimum
            - un chiffre minimum
            - un caractere special minimum
        codecs:
          type: string
          description: code de parainage
        referClick:
          type: number
          description: nombre de fois le lien est cliquer
        online:
          type: boolean
          description: permet d'identifier un utilisateur en ligne
        isAuthenticated:
          type: boolean
          description: permet d'identifierun utilisateur authentifier
        staff:
          type: boolean
          description: permet d'identifier les admins
        authorization:
          type: array
          items:
            type: string
          description: definis les authorisation des utilisateurs
        disconnected:
          type: string
          description: dernier date de deconnexion
        createdAt:
          type: string
          format: date-time
          description: date de creation de l'utilisateur
        updatedAt:
          type: string
          format: date-time
          description: derniere mis a jour de l'utilisateur

    Org:
      type: object
      required:
        - reason
        - social
        - country
        - state
        - address
        - location
        - phone
        - email
        - sector
        - service
        - area
      properties:
        reason:
          type: string
          description: nom de l'organisation
        mentor:
          type: string
          format: ObjectId
          description: identifiant du referant
        social:
          type: string
          description: type de societe
          enum:
            - SNC
            - SCS
            - SA
            - SAS
            - SASU
            - SARL
            - EURL
            - SCOP
            - SCIC
            - EI
            - EIRL
            - Micro-entreprise
        country:
          type: string
          description: pays
        state:
          type: string
          description: ville/coummune
        address:
          type: string
          description: location verbale
        location:
          type: object
          properties:
            type:
              type: string
            coordinates:
              type: array
              items:
                type: number
        phone:
          type: string
          description: numero professionnel de l'organisation
        email:
          type: string
          description: email professionnel de l'organisation
        sector:
          type: string
          format: ObjectId
          description: identifiant du sector principal de l'organisation
        service:
          type: string
          description: service fournis
        area:
          type: string
          description: zone d'action
        picture:
          type: string
          description: photo de profil de l'organisation

    Credentials:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string


paths:

  /admin/load-data:
    post:
      summary: >
        collecte les donnee d'inscription d'un admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '200':
          description: >
            Email envoyer a l'admin avec un code de validation a 6 chiffre
        '400':
          description: >
            echecs de la requete pour données invalide
            soit donnnes incomplete
            soit donnees de type differents attendu
            soit erreur a la genaration du token (rare)
  
  /admin/register:
    post:
      summary: >
        creation du admin avec avec restriction a aucune action
        le superadmin doit l'octroyer des authorization pour qu'il ai acces a la plateforme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
  
  /admin/login:
    post:
      summary: >
        connexion par email et reception de code d'authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Email envoyer avec success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticated'
  
  /admin/logout:
    get:
      summary: logout admin
      responses:
        '200':
          description: success
  
  /admin/pass:
    post:
      summary: >
        connexion par code d'authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                  refresh:
                    type: string
  
  /admin:
    get:
      summary: lister les admins selon ou/et avec des critere
      parameters:
        - $ref: '#/components/parameters/Name'
        - $ref: '#/components/parameters/Letter'
        - $ref: '#/components/parameters/Before'
        - $ref: '#/components/parameters/After'
        - $ref: '#/components/parameters/Position'
        - $ref: '#/components/parameters/Online'
        - $ref: '#/components/parameters/IsAuthenticated'
        - $ref: '#/components/parameters/Staff'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Admin'

  /admin/check-email:
    post:
      summary: verifier le nouveau email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              required:
                - email
              properties:
                email:
                  type: string
      responses:
        '200':
          description: success

  /admin/update-email:
    put:
      summary: mis a jour du mail admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              required:
                - code
              properties:
                code:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'

  /admin/recovery:
    post:
      summary: code de recuperation de code si l'email est perdu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              required:
                - recovery
              properties:
                recovery:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'

  /admin/{id}:
    get:
      summary: >
        recuperation des donnees d'un admin
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
  
    put:
      summary: mis a jour des donnes admin
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'

    delete:
      summary: suppression des donnees administrateur
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: success
  
  /stats/admin:
    get:
      summary: nombre d'element selon la requete
      parameters:
        - $ref: '#/components/parameters/Name'
        - $ref: '#/components/parameters/Letter'
        - $ref: '#/components/parameters/Before'
        - $ref: '#/components/parameters/After'
        - $ref: '#/components/parameters/Position'
        - $ref: '#/components/parameters/Online'
        - $ref: '#/components/parameters/IsAuthenticated'
        - $ref: '#/components/parameters/Staff'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: number


  /lead:
    post:
      summary: creation  de lead
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
    
    get:
      summary: recuperation de plusieurs leads
      parameters:
        - $ref: '#/components/parameters/Name'
        - $ref: '#/components/parameters/Letter'
        - $ref: '#/components/parameters/Address'
        - $ref: '#/components/parameters/Before'
        - $ref: '#/components/parameters/Online'
        - $ref: '#/components/parameters/IsAuthenticated'
        - $ref: '#/components/parameters/Staff'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lead'
  
  /lead/{id}:
    post:
      summary: connexion d'un lead
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticated'
    
    get:
      summary: recuperation d'un profil lead
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
    
    put:
      summary: mis a jour du lead
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lead'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'

    delete:
      summary: suppression d'un lead
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: success

  /lead/logout:
    get:
      summary: logout lead
      responses:
        '200':
          description: success
  
  /stats/lead:
    get:
      summary: total lead
      parameters:
        - $ref: '#/components/parameters/Name'
        - $ref: '#/components/parameters/Letter'
        - $ref: '#/components/parameters/Address'
        - $ref: '#/components/parameters/Before'
        - $ref: '#/components/parameters/Online'
        - $ref: '#/components/parameters/IsAuthenticated'
        - $ref: '#/components/parameters/Staff'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: number


  /member:
    get:
      summary: recuperation de masse
      parameters:
        - $ref: "#/components/parameters/Org"
        - $ref: "#/components/parameters/Name"
        - $ref: "#/components/parameters/Position"
        - $ref: "#/components/parameters/Online"
        - $ref: "#/components/parameters/IsAuthenticated"
        - $ref: "#/components/parameters/Staff"
        - $ref: "#/components/parameters/Before"
        - $ref: "#/components/parameters/After"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/Limit"
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Member"
  /member/{id}:
    post:
      summary: creation de compte membre
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Member"
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
    
    get:
      summary: recuperation d'un membre
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
    
    put:
      summary: mis a jour 
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Member"
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
    
    delete:
      summary: suppression
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        '204':
          description: success

  /member/login:
    post:
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credentials"
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credentials"

  /member/logout:
    get:
      summary: logout
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        '200':
          description: success
  
  /member/reset:
    post:
      summary: reinitialisation de mot de pass
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        '200':
          description: success

  /stats/member:
    get:
      summary: stats membre
      parameters:
        - $ref: "#/components/parameters/Org"
        - $ref: "#/components/parameters/Name"
        - $ref: "#/components/parameters/Position"
        - $ref: "#/components/parameters/Online"
        - $ref: "#/components/parameters/IsAuthenticated"
        - $ref: "#/components/parameters/Staff"
        - $ref: "#/components/parameters/Before"
        - $ref: "#/components/parameters/After"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/Limit"
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: number
